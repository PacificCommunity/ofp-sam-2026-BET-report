name: BET-2026 Report Pipeline

on:
  workflow_dispatch:
    inputs:
      run_mode:
        description: "Select pipeline mode"
        required: true
        default: "full"
        type: choice
        options:
          - full
          - plots_only
          - report_only
      version_note:
        description: "Optional note for this release"
        required: false
        default: ""
  push:
    branches: [main]

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    env:
      RUN_PIPELINE: ${{ vars.RUN_PIPELINE }}

    steps:
      # Always checkout the repository first
      - name: Checkout repository
        uses: actions/checkout@v3

      # Skip the workflow entirely if RUN_PIPELINE=false on push events
      - name: Skip if RUN_PIPELINE=false
        if: ${{ github.event_name == 'push' && env.RUN_PIPELINE != 'true' }}
        run: |
          echo "RUN_PIPELINE is false. Skipping all steps."
          exit 0

      # Run the pipeline and pull Docker image only if allowed
      - name: Run BET-2026 pipeline
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: |
          echo "RUN_PIPELINE is true. Executing pipeline..."
          # Pull Docker image for consistent environment
          docker pull ghcr.io/pacificcommunity/bet-2026:v1.2

          # Select the pipeline mode based on user input
          MODE="${{ github.event.inputs.run_mode }}"
          if [ "$MODE" = "plots_only" ]; then
            make docker-plot_sens
            make docker-plot_grid
          elif [ "$MODE" = "report_only" ]; then
            make docker-report
          else
            make docker-plot_sens
            make docker-plot_grid
            make docker-report
          fi

      # Prepare files for release or GitHub Pages
      - name: Prepare release directory
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: |
          mkdir -p public
          cp report/bet-2026.pdf public/ || true
          cp plot/plots_sens.html public/ || true
          cp plot/plots_grid.html public/ || true

      # Deploy outputs to GitHub Pages
      - name: Deploy to GitHub Pages
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          # Remove all previous files and recreate the orphan branch
          force_orphan: true
          keep_files: false
          # Specify the branch for GitHub Pages
          publish_branch: gh-pages

      # Create a GitHub Release
      - name: Create GitHub Release
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          # Use run number as a unique tag to prevent conflicts
          tag_name: ${{ github.run_number }}
          name: BET-2026 Report #${{ github.run_number }}
          body: |
            ## BET-2026 Automated Report
            **Mode:** ${{ github.event.inputs.run_mode }}
            ${{ github.event.inputs.version_note }}
            
            **View online:**  
            - [Sensitivity Plots](https://${{ github.repository_owner }}.github.io/${{ github.repository.name }}/plots_sens.html)  
            - [Grid Plots](https://${{ github.repository_owner }}.github.io/${{ github.repository.name }}/plots_grid.html)  
            - [PDF Report](https://${{ github.repository_owner }}.github.io/${{ github.repository.name }}/bet-2026.pdf)
          files: |
            report/bet-2026.pdf
            plot/plots_sens.html
            plot/plots_grid.html


