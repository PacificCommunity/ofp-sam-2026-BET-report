name: BET-2026 Report Pipeline

on:
  workflow_dispatch:
    inputs:
      run_mode:
        description: "Select pipeline mode"
        required: true
        default: "full"
        type: choice
        options:
          - full
          - plots_only
          - report_only
      version_note:
        description: "Optional note for this release"
        required: false
        default: ""
  push:
    branches: [main]

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    env:
      # Use repository variable, fallback to 'true'
      RUN_PIPELINE: ${{ vars.RUN_PIPELINE || 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug RUN_PIPELINE value
        run: echo "RUN_PIPELINE='${RUN_PIPELINE}'"

      - name: Skip job if RUN_PIPELINE=false
        if: ${{ github.event_name == 'push' && env.RUN_PIPELINE != 'true' }}
        run: |
          echo "Automatic execution is disabled. Exiting."
          exit 0

      - name: Pull BET-2026 Docker image
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: docker pull ghcr.io/pacificcommunity/bet-2026:v1.2

      - name: Run BET-2026 pipeline
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: |
          MODE="${{ github.event.inputs.run_mode }}"
          if [ "$MODE" = "plots_only" ]; then
            make docker-plot_sens
            make docker-plot_grid
          elif [ "$MODE" = "report_only" ]; then
            make docker-report
          else
            make docker-plot_sens
            make docker-plot_grid
            make docker-report
          fi

      - name: Create unique version tag
        id: tag
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: |
          DATE=$(date +'%Y%m%d')
          BASE_TAG="v${DATE}"
          git fetch --tags
          COUNT=0
          TAG="$BASE_TAG"
          while git ls-remote --tags origin | grep -q "refs/tags/$TAG"; do
            COUNT=$((COUNT + 1))
            TAG="${BASE_TAG}-$COUNT"
          done
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          git tag "$TAG"
          git push origin "$TAG"

      - name: Prepare release directory
        id: prep_release
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: |
          mkdir -p public
          cp report/bet-2026.pdf public/bet-2026-${{ steps.tag.outputs.tag }}.pdf
          cp plot/plots_sens.html public/plots_sens-${{ steps.tag.outputs.tag }}.html
          cp plot/plots_grid.html public/plots_grid-${{ steps.tag.outputs.tag }}.html
          echo -e "/*\n  Cache-Control: no-cache" > public/_headers

      - name: Deploy to GitHub Pages via gh CLI
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -B gh-pages
          git rm -rf .
          cp -r public/* .
          git add .
          git commit -m "Update GitHub Pages content"
          git push -f origin gh-pages
          git commit --allow-empty -m "Force GitHub Pages rebuild"
          git push

      - name: Create GitHub Release
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: BET-2026 Report ${{ steps.tag.outputs.tag }}
          body: |
            ## BET-2026 Automated Report
            **Mode:** ${{ github.event.inputs.run_mode }}
            ${{ github.event.inputs.version_note }}

            **Download (latest release):**
            - bet-2026-${{ steps.tag.outputs.tag }}.pdf
            - plots_sens-${{ steps.tag.outputs.tag }}.html
            - plots_grid-${{ steps.tag.outputs.tag }}.html

            **Online preview (may have cache delay):**
            - [Sensitivity Plots](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/plots_sens-${{ steps.tag.outputs.tag }}.html)
            - [Grid Plots](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/plots_grid-${{ steps.tag.outputs.tag }}.html)
            - [PDF](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/bet-2026-${{ steps.tag.outputs.tag }}.pdf)

            **Note:**  
            GitHub Pages cache may cause a 1â€“10 minute delay before updates. The downloadable release files are always the latest.

          files: |
            public/bet-2026-${{ steps.tag.outputs.tag }}.pdf
            public/plots_sens-${{ steps.tag.outputs.tag }}.html
            public/plots_grid-${{ steps.tag.outputs.tag }}.html
