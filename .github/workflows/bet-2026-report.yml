name: BET-2026 Report Pipeline

on:
  workflow_dispatch:
    inputs:
      run_mode:
        description: "Select pipeline mode"
        required: true
        default: "full"
        type: choice
        options:
          - full
          - plots_only
          - report_only
      version_note:
        description: "Optional note for this release"
        required: false
        default: ""
  push:
    branches: [main]

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    env:
      RUN_PIPELINE: ${{ vars.RUN_PIPELINE }}

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Skip push event if automatic execution is off
      - name: Skip push event if RUN_PIPELINE=false
        if: ${{ github.event_name == 'push' && env.RUN_PIPELINE != 'true' }}
        run: |
          echo "Automatic execution is disabled (RUN_PIPELINE=false). Exiting."
          exit 0

      # Pull Docker image (no cache)
      - name: Pull BET-2026 Docker image
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: docker pull ghcr.io/pacificcommunity/bet-2026:v1.2

      # Run BET-2026 pipeline
      - name: Run BET-2026 pipeline
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: |
          MODE="${{ github.event.inputs.run_mode }}"
          if [ "$MODE" = "plots_only" ]; then
            make docker-plot_sens
            make docker-plot_grid
          elif [ "$MODE" = "report_only" ]; then
            make docker-report
          else
            make docker-plot_sens
            make docker-plot_grid
            make docker-report
          fi

      # Prepare release directory
      - name: Prepare release directory
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        run: |
          mkdir -p public
          cp report/bet-2026.pdf public/ || true
          cp plot/plots_sens.html public/ || true
          cp plot/plots_grid.html public/ || true

      # Deploy outputs to GitHub Pages
      - name: Deploy to GitHub Pages
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          force: true

      # Create a unique version tag
      - name: Create version tag
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          BASE_TAG="v${DATE}"
          git fetch --tags
          EXISTING_COUNT=$(git tag -l "${BASE_TAG}*" | wc -l)
          if [ "$EXISTING_COUNT" -eq 0 ]; then
            TAG="$BASE_TAG"
          else
            TAG="${BASE_TAG}-$((EXISTING_COUNT+1))"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          git tag "$TAG"
          git push origin "$TAG"

      # Create GitHub Release
      - name: Create GitHub Release
        if: ${{ github.event_name == 'workflow_dispatch' || env.RUN_PIPELINE == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: BET-2026 Report ${{ steps.tag.outputs.tag }}
          body: |
            ## BET-2026 Automated Report
            **Mode:** ${{ github.event.inputs.run_mode }}
            ${{ github.event.inputs.version_note }}
            
            **View online:**  
            - [Sensitivity Plots](https://${{ github.repository_owner }}.github.io/${{ github.repository.name }}/plots_sens.html)  
            - [Grid Plots](https://${{ github.repository_owner }}.github.io/${{ github.repository.name }}/plots_grid.html)  
            - [PDF Report](https://${{ github.repository_owner }}.github.io/${{ github.repository.name }}/bet-2026.pdf)
          files: |
            report/bet-2026.pdf
            plot/plots_sens.html
            plot/plots_grid.html

