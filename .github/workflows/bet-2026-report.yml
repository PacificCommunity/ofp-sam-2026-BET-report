name: BET-2026 Report Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-release-and-pages:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker image
      uses: actions/cache@v3
      with:
        path: /tmp/.docker_cache
        key: docker-image-bet-2026
        restore-keys: |
          docker-image-bet-2026

    - name: Pull BET-2026 Docker image
      run: |
        docker pull ghcr.io/pacificcommunity/bet-2026:v1.2

    - name: Run BET-2026 pipeline
      run: |
        make docker-plot_sens
        make docker-plot_grid
        make docker-report

    # Determine next available version tag (auto-increment if same day)
    - name: Determine version tag
      id: version
      run: |
        date_tag="v$(date +'%Y.%m.%d')"
        count=$(gh release list --limit 100 --json tagName -q ".[] | select(.tagName | startswith(\"$date_tag\"))" | wc -l)
        if [ "$count" -eq 0 ]; then
          tag="$date_tag-1"
        else
          next=$((count + 1))
          tag="$date_tag-$next"
        fi
        echo "tag=$tag" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Create GitHub Release
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: BET-2026 Report (${{ steps.version.outputs.tag }})
        body: |
          Automated BET-2026 model report and plots.
          Generated automatically on ${{ steps.version.outputs.tag }}.
        files: |
          report/bet-2026.pdf
          plot/plots_sens.html
          plot/plots_grid.html
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Prepare versioned directory for GitHub Pages
    - name: Prepare versioned output
      run: |
        mkdir -p ./gh-pages/output/${{ steps.version.outputs.tag }}
        cp -r report plot ./gh-pages/output/${{ steps.version.outputs.tag }}/

    # Deploy to GitHub Pages under versioned folder
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./gh-pages
        keep_files: true




      
